using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class movement : MonoBehaviour
{
    public CharacterController controller;
 

    public float speed = 12f;
    public float gravity = -9.81f;
    public float jumpHeight = 3f;
    public float dashLength = 0.15f;
    public float dashSpeed = 100f;
    public float dashResetTime = 1f;

    Vector3 velocity;

    public Transform groundCheck;
    public float groundDistance = 0.4f;
    public LayerMask groundMask;

    bool isGrounded;
    public bool isSprinting = false;
    public float sprintingMultiplier;
    public float crouchingHeight = 1f;

    public bool isCrouching = false;
    public float crouchingMultiplier;
    public float standingHeight = 2f;
    private Vector3 dashMove;
    private float dashing = 0f;
    private float dashingTime = 0f;
    private bool canDash = true;
    private bool dashingNow = false;
    private bool dashReset = true;
    public bool isdashing = false;

    public staminascript StaminaBar;
    public int maxStamina = 100;
    public int currentStamina;
    // Update is called once per frame
    void Update()
    {
        isGrounded = Physics.CheckSphere(groundCheck.position, groundDistance, groundMask);

        if (isGrounded && velocity.y < 0)
        {
            velocity.y = -2f;

        }

        float x = Input.GetAxis("Horizontal");

        float z = Input.GetAxis("Vertical");

        Vector3 move = transform.right * x + transform.forward * z;

        controller.Move(move * speed * Time.deltaTime);

        if(Input.GetButtonDown("Jump") && isGrounded)
        {
            velocity.y = Mathf.Sqrt(jumpHeight * -2 * gravity);

        }

        if(Input.GetKey(KeyCode.LeftShift))
        {
            isSprinting = true;
            


        }
        else
        {
            isSprinting = false;

        }


        if(isSprinting == true)
        {
           speed = 8f;
           
        }
        if (isSprinting == false)
        {
            speed = 5f;
            
        }
        
        if (Input.GetKey(KeyCode.LeftControl))
        {
            isCrouching = true;
        }
        if (Input.GetKeyUp(KeyCode.LeftControl))
        {
            isCrouching = false;
        }
        if (isCrouching == true)        
        {
                controller.height = crouchingHeight;
            speed -= 3f;
        }
        else
        {
            controller.height = standingHeight;
        }

        velocity.y += gravity * Time.deltaTime;

        controller.Move(velocity * Time.deltaTime);

        FindObjectOfType<gamemanager>().GameOver();


        if (Input.GetKey(KeyCode.E) == true && dashing < dashLength && dashingTime < dashResetTime && dashReset == true && canDash == true)
        {
            dashMove = move;
            canDash = false;
            dashReset = false;
            dashingNow = true;
        }

        if (dashingNow == true && dashing < dashLength)
        {
            controller.Move(dashMove * dashSpeed * Time.deltaTime);
            dashing += Time.deltaTime;
        }

        if (dashing >= dashLength)
        {
            dashingNow = false;
        }

        if (dashingNow == false)
        {
            controller.Move(move * speed * Time.deltaTime);
        }

        if (dashReset == false)
        {
            dashingTime += Time.deltaTime;
        }

        if (controller.isGrounded && canDash == false && dashing >= dashLength)
        {
            canDash = true;
            dashing = 0f;
        }

        if (dashingTime >= dashResetTime && dashReset == false)
        {
            dashReset = true;
            dashingTime = 0f;
        }
        void MinusStamina(int MinusStamina)
        {
            currentStamina -= MinusStamina;

            StaminaBar.SetStamina(currentStamina);
        }
    }








} 0
